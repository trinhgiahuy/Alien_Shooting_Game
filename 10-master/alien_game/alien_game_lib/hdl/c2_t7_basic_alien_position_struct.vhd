-- VHDL Entity alien_game_lib.c2_t7_basic_alien_position.symbol
--
-- Created:
--          by - Asus.UNKNOWN (LAPTOP-IT04P56L)
--          at - 12:17:34 05/27/2020
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY c2_t7_basic_alien_position IS
   PORT( 
      clk     : IN     std_logic;
      enable  : IN     std_logic;
      rst_n   : IN     std_logic;
      x_coord : OUT    std_logic_vector (7 DOWNTO 0);
      y_coord : OUT    std_logic_vector (7 DOWNTO 0)
   );

-- Declarations

END c2_t7_basic_alien_position ;

--
-- VHDL Architecture alien_game_lib.c2_t7_basic_alien_position.struct
--
-- Created:
--          by - Asus.UNKNOWN (LAPTOP-IT04P56L)
--          at - 12:23:02 05/27/2020
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

LIBRARY alien_game_lib;

ARCHITECTURE struct OF c2_t7_basic_alien_position IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL c_out        : std_logic_vector(7 DOWNTO 0);
   SIGNAL data_out     : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout         : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout1        : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout2        : std_logic_vector(7 DOWNTO 0);
   SIGNAL q            : std_logic;
   SIGNAL x_direct_out : std_logic;

   -- Implicit buffer signal declarations
   SIGNAL x_coord_internal : std_logic_vector (7 DOWNTO 0);


   -- ModuleWare signal declarations(v1.12) for instance 'U_3' of 'adff'
   SIGNAL mw_U_3reg_cval : std_logic_vector(7 DOWNTO 0) := "00000000";

   -- ModuleWare signal declarations(v1.12) for instance 'U_8' of 'adff'
   SIGNAL mw_U_8reg_cval : std_logic;

   -- ModuleWare signal declarations(v1.12) for instance 'U_9' of 'adff'
   SIGNAL mw_U_9reg_cval : std_logic_vector(7 DOWNTO 0) := "00000000";

   -- Component Declarations
   COMPONENT c2_t3_left_shifter
   PORT (
      data_in  : IN     std_logic_vector (7 DOWNTO 0);
      data_out : OUT    std_logic_vector (7 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT c2_t4_right_shifter
   PORT (
      c_in  : IN     std_logic_vector (7 DOWNTO 0);
      c_out : OUT    std_logic_vector (7 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT c2_t7_basic_alien_position_direction
   PORT (
      x_coord      : IN     std_logic_vector (7 DOWNTO 0);
      x_direct_in  : IN     std_logic ;
      x_direct_out : OUT    std_logic 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : c2_t3_left_shifter USE ENTITY alien_game_lib.c2_t3_left_shifter;
   FOR ALL : c2_t4_right_shifter USE ENTITY alien_game_lib.c2_t4_right_shifter;
   FOR ALL : c2_t7_basic_alien_position_direction USE ENTITY alien_game_lib.c2_t7_basic_alien_position_direction;
   -- pragma synthesis_on


BEGIN

   -- ModuleWare code(v1.12) for instance 'U_3' of 'adff'
   x_coord_internal <= mw_U_3reg_cval;
   u_3seq_proc: PROCESS (clk)BEGIN
      IF (clk'EVENT AND clk='1') THEN
         IF (rst_n = '0') THEN
            mw_U_3reg_cval <= "00010000";
         ELSE
            mw_U_3reg_cval <= dout1;
         END IF;
      END IF;
   END PROCESS u_3seq_proc;

   -- ModuleWare code(v1.12) for instance 'U_8' of 'adff'
   q <= mw_U_8reg_cval;
   u_8seq_proc: PROCESS (clk)BEGIN
      IF (clk'EVENT AND clk='1') THEN
         IF (rst_n = '0') THEN
            mw_U_8reg_cval <= '0';
         ELSE
            mw_U_8reg_cval <= x_direct_out;
         END IF;
      END IF;
   END PROCESS u_8seq_proc;

   -- ModuleWare code(v1.12) for instance 'U_9' of 'adff'
   y_coord <= mw_U_9reg_cval;
   u_9seq_proc: PROCESS (clk)BEGIN
      IF (clk'EVENT AND clk='1') THEN
         IF (rst_n = '0') THEN
            mw_U_9reg_cval <= "00000001";
         ELSE
            mw_U_9reg_cval <= dout;
         END IF;
      END IF;
   END PROCESS u_9seq_proc;

   -- ModuleWare code(v1.12) for instance 'U_0' of 'constval'
   dout <= "00000001";

   -- ModuleWare code(v1.12) for instance 'U_2' of 'mux'
   u_2combo_proc: PROCESS(x_coord_internal, dout2, enable)
   BEGIN
      CASE enable IS
      WHEN '0' => dout1 <= x_coord_internal;
      WHEN '1' => dout1 <= dout2;
      WHEN OTHERS => dout1 <= (OTHERS => 'X');
      END CASE;
   END PROCESS u_2combo_proc;

   -- ModuleWare code(v1.12) for instance 'U_6' of 'mux'
   u_6combo_proc: PROCESS(c_out, data_out, q)
   BEGIN
      CASE q IS
      WHEN '0' => dout2 <= c_out;
      WHEN '1' => dout2 <= data_out;
      WHEN OTHERS => dout2 <= (OTHERS => 'X');
      END CASE;
   END PROCESS u_6combo_proc;

   -- Instance port mappings.
   U_4 : c2_t3_left_shifter
      PORT MAP (
         data_in  => x_coord_internal,
         data_out => data_out
      );
   U_1 : c2_t4_right_shifter
      PORT MAP (
         c_in  => x_coord_internal,
         c_out => c_out
      );
   U_7 : c2_t7_basic_alien_position_direction
      PORT MAP (
         x_coord      => x_coord_internal,
         x_direct_in  => q,
         x_direct_out => x_direct_out
      );

   -- Implicit buffered output assignments
   x_coord <= x_coord_internal;

END struct;
