-- VHDL Entity alien_game_lib.c2_t1_incrementer.symbol
--
-- Created:
--          by - bdgitr.UNKNOWN (HTC219-711-SPC)
--          at - 15:04:29 16.02.2020
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY c2_t1_incrementer IS
   PORT( 
      input_to_your_design : IN     std_logic_vector (2 DOWNTO 0);
      result               : OUT    std_logic_vector (2 DOWNTO 0)
   );

-- Declarations

END c2_t1_incrementer ;

--
-- VHDL Architecture alien_game_lib.c2_t1_incrementer.struct
--
-- Created:
--          by - bdgitr.UNKNOWN (HTC219-711-SPC)
--          at - 13:54:23 22.02.2020
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

LIBRARY alien_game_lib;

ARCHITECTURE struct OF c2_t1_incrementer IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL carry  : std_logic;
   SIGNAL carry1 : std_logic;
   SIGNAL dout   : std_logic;
   SIGNAL dout0  : std_logic;
   SIGNAL dout1  : std_logic;
   SIGNAL dout2  : std_logic;
   SIGNAL sum    : std_logic;
   SIGNAL sum1   : std_logic;
   SIGNAL sum2   : std_logic;


   -- ModuleWare signal declarations(v1.12) for instance 'U_0' of 'split'
   SIGNAL mw_U_0temp_din : std_logic_vector(2 DOWNTO 0);

   -- Component Declarations
   COMPONENT c1_t1_half_adder
   PORT (
      sw0   : IN     std_logic ;
      sw1   : IN     std_logic ;
      carry : OUT    std_logic ;
      sum   : OUT    std_logic 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : c1_t1_half_adder USE ENTITY alien_game_lib.c1_t1_half_adder;
   -- pragma synthesis_on


BEGIN

   -- ModuleWare code(v1.12) for instance 'U_5' of 'constval'
   dout <= '1';

   -- ModuleWare code(v1.12) for instance 'U_1' of 'merge'
   result <= sum2 & sum1 & sum;

   -- ModuleWare code(v1.12) for instance 'U_0' of 'split'
   mw_U_0temp_din <= input_to_your_design;
   u_0combo_proc: PROCESS (mw_U_0temp_din)
   VARIABLE temp_din: std_logic_vector(2 DOWNTO 0);
   BEGIN
      temp_din := mw_U_0temp_din(2 DOWNTO 0);
      dout0 <= temp_din(0);
      dout1 <= temp_din(1);
      dout2 <= temp_din(2);
   END PROCESS u_0combo_proc;

   -- Instance port mappings.
   U_2 : c1_t1_half_adder
      PORT MAP (
         sw0   => dout,
         sw1   => dout0,
         carry => carry,
         sum   => sum
      );
   U_3 : c1_t1_half_adder
      PORT MAP (
         sw0   => carry,
         sw1   => dout1,
         carry => carry1,
         sum   => sum1
      );
   U_4 : c1_t1_half_adder
      PORT MAP (
         sw0   => carry1,
         sw1   => dout2,
         carry => OPEN,
         sum   => sum2
      );

END struct;
