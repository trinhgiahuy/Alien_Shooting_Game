-- VHDL Entity alien_game_lib.c1_t3_hello_led.symbol
--
-- Created:
--          by - bdgitr.UNKNOWN (HTC219-711-SPC)
--          at - 17:35:06 16.02.2020
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY c1_t3_hello_led IS
   PORT( 
      btn       : IN     std_logic_vector (3 DOWNTO 0);
      sw0       : IN     std_logic;
      color_BGR : OUT    std_logic_vector (23 DOWNTO 0);
      x_coord   : OUT    std_logic_vector (7 DOWNTO 0);
      y_coord   : OUT    std_logic_vector (7 DOWNTO 0)
   );

-- Declarations

END c1_t3_hello_led ;

--
-- VHDL Architecture alien_game_lib.c1_t3_hello_led.struct
--
-- Created:
--          by - bdgitr.UNKNOWN (HTC219-711-SPC)
--          at - 17:35:06 16.02.2020
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

LIBRARY alien_game_lib;

ARCHITECTURE struct OF c1_t3_hello_led IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL color_BGR1 : std_logic_vector(23 DOWNTO 0);
   SIGNAL color_BGR2 : std_logic_vector(23 DOWNTO 0);
   SIGNAL x_coord1   : std_logic_vector(7 DOWNTO 0);
   SIGNAL x_coord2   : std_logic_vector(7 DOWNTO 0);
   SIGNAL y_coord1   : std_logic_vector(7 DOWNTO 0);
   SIGNAL y_coord2   : std_logic_vector(7 DOWNTO 0);


   -- Component Declarations
   COMPONENT constant_value
   PORT (
      color_BGR : OUT    std_logic_vector (23 DOWNTO 0);
      x_coord   : OUT    std_logic_vector (7 DOWNTO 0);
      y_coord   : OUT    std_logic_vector (7 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT user_input
   PORT (
      btn       : IN     std_logic_vector (3 DOWNTO 0);
      color_BGR : OUT    std_logic_vector (23 DOWNTO 0);
      x_coord   : OUT    std_logic_vector (7 DOWNTO 0);
      y_coord   : OUT    std_logic_vector (7 DOWNTO 0)
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : constant_value USE ENTITY alien_game_lib.constant_value;
   FOR ALL : user_input USE ENTITY alien_game_lib.user_input;
   -- pragma synthesis_on


BEGIN

   -- ModuleWare code(v1.12) for instance 'U_2' of 'mux'
   u_2combo_proc: PROCESS(color_BGR1, color_BGR2, sw0)
   BEGIN
      CASE sw0 IS
      WHEN '0' => color_BGR <= color_BGR1;
      WHEN '1' => color_BGR <= color_BGR2;
      WHEN OTHERS => color_BGR <= (OTHERS => 'X');
      END CASE;
   END PROCESS u_2combo_proc;

   -- ModuleWare code(v1.12) for instance 'U_3' of 'mux'
   u_3combo_proc: PROCESS(x_coord1, x_coord2, sw0)
   BEGIN
      CASE sw0 IS
      WHEN '0' => x_coord <= x_coord1;
      WHEN '1' => x_coord <= x_coord2;
      WHEN OTHERS => x_coord <= (OTHERS => 'X');
      END CASE;
   END PROCESS u_3combo_proc;

   -- ModuleWare code(v1.12) for instance 'U_4' of 'mux'
   u_4combo_proc: PROCESS(y_coord1, y_coord2, sw0)
   BEGIN
      CASE sw0 IS
      WHEN '0' => y_coord <= y_coord1;
      WHEN '1' => y_coord <= y_coord2;
      WHEN OTHERS => y_coord <= (OTHERS => 'X');
      END CASE;
   END PROCESS u_4combo_proc;

   -- Instance port mappings.
   U_0 : constant_value
      PORT MAP (
         color_BGR => color_BGR1,
         x_coord   => x_coord1,
         y_coord   => y_coord1
      );
   U_1 : user_input
      PORT MAP (
         btn       => btn,
         color_BGR => color_BGR2,
         x_coord   => x_coord2,
         y_coord   => y_coord2
      );

END struct;
