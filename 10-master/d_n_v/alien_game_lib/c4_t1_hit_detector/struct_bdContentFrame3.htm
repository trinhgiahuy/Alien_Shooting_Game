<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head>
<title></title>
<link rel="Stylesheet" title="hdl2html stylesheet" media="Screen" href="../../scripts/hdl2html.css">
<!-- Generated by HDL Designer -->
<!--    at 15:42:42 on 05/31/2020 -->
<script language='javascript'>
function pagesBtn() {
   return '';
}
function panelmenu() {
   return '';
}
</script>
</head>
<body>
<pre>
<span class=C>-- VHDL Entity alien_game_lib.c4_t1_hit_detector.symbol</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - ACER.UNKNOWN (LAPTOP-PGKK1HS3)</span>
<span class=C>--          at - 18:53:27 05&#47;28&#47;2020</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>ENTITY</span> c4_t1_hit_detector <span class=K>IS</span>
   <span class=K>PORT</span>(
      alien_x : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      alien_y : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      clk     : <span class=A>IN</span>     <span class=T>std_logic</span>;
      gun_x   : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      gun_y   : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      rst_n   : <span class=A>IN</span>     <span class=T>std_logic</span>;
      hit     : <span class=A>OUT</span>    <span class=T>std_logic</span>
   );

<span class=C>-- Declarations</span>

<span class=K>END</span> c4_t1_hit_detector ;

<span class=C>--</span>
<span class=C>-- VHDL Architecture alien_game_lib.c4_t1_hit_detector.struct</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - ACER.UNKNOWN (LAPTOP-PGKK1HS3)</span>
<span class=C>--          at - 18:53:27 05&#47;28&#47;2020</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>LIBRARY</span> alien_game_lib;

<span class=K>ARCHITECTURE</span> struct <span class=K>OF</span> c4_t1_hit_detector <span class=K>IS</span>

   <span class=C>-- Architecture declarations</span>

   <span class=C>-- Internal signal declarations</span>
   <span class=K>SIGNAL</span> dout      : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout1     : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> equality  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> equality1 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> q         : <span class=T>std_logic</span>;


   <span class=C>-- ModuleWare signal declarations(v1.12) for instance 'U_0' of 'adff'</span>
   <span class=K>SIGNAL</span> mw_U_0reg_cval : <span class=T>std_logic</span>;

   <span class=C>-- ModuleWare signal declarations(v1.12) for instance 'U_1' of 'adff'</span>
   <span class=K>SIGNAL</span> mw_U_1reg_cval : <span class=T>std_logic</span>;

   <span class=C>-- Component Declarations</span>
   <span class=K>COMPONENT</span> c4_t1_coordinate_compare
   <span class=K>PORT</span> (
      coord_1  : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      coord_2  : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      equality : <span class=A>OUT</span>    <span class=T>std_logic</span>
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;

   <span class=C>-- Optional embedded configurations</span>
   <span class=C>-- pragma synthesis_off</span>
   <span class=K>FOR</span> <span class=K>ALL</span> : c4_t1_coordinate_compare <span class=K>USE</span> <span class=K>ENTITY</span> alien_game_lib.c4_t1_coordinate_compare;
   <span class=C>-- pragma synthesis_on</span>


<span class=K>BEGIN</span>

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_0' of 'adff'</span>
   hit <= mw_U_0reg_cval;
   u_0seq_proc: <span class=K>PROCESS</span> (clk, rst_n)
   <span class=K>BEGIN</span>
      <span class=K>IF</span> (rst_n = '0') <span class=K>THEN</span>
         mw_U_0reg_cval <= '0';
      <span class=K>ELSIF</span> (clk'<span class=A>EVENT</span> <span class=K>AND</span> clk='1') <span class=K>THEN</span>
         mw_U_0reg_cval <= dout1;
      <span class=K>END</span> <span class=K>IF</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_0seq_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_1' of 'adff'</span>
   q <= mw_U_1reg_cval;
   u_1seq_proc: <span class=K>PROCESS</span> (clk, rst_n)
   <span class=K>BEGIN</span>
      <span class=K>IF</span> (rst_n = '0') <span class=K>THEN</span>
         mw_U_1reg_cval <= '0';
      <span class=K>ELSIF</span> (clk'<span class=A>EVENT</span> <span class=K>AND</span> clk='1') <span class=K>THEN</span>
         mw_U_1reg_cval <= dout;
      <span class=K>END</span> <span class=K>IF</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_1seq_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_2' of 'and'</span>
   dout <= equality <span class=K>AND</span> equality1;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_3' of 'and'</span>
   dout1 <= <span class=K>NOT</span>(q) <span class=K>AND</span> dout;

   <span class=C>-- Instance port mappings.</span>
   U_4 : c4_t1_coordinate_compare
      <span class=K>PORT</span> <span class=K>MAP</span> (
         coord_1  => alien_x,
         coord_2  => gun_x,
         equality => equality
      );
   U_5 : c4_t1_coordinate_compare
      <span class=K>PORT</span> <span class=K>MAP</span> (
         coord_1  => alien_y,
         coord_2  => gun_y,
         equality => equality1
      );

<span class=K>END</span> struct;</pre>
<SCRIPT SRC="../../scripts/is.js"></SCRIPT><SCRIPT SRC="../../scripts/imageFrame.js"></SCRIPT>
</body>
