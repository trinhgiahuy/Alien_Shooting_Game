<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head>
<title></title>
<link rel="Stylesheet" title="hdl2html stylesheet" media="Screen" href="../../scripts/hdl2html.css">
<!-- Generated by HDL Designer -->
<!--    at 15:42:43 on 05/31/2020 -->
<script language='javascript'>
function pagesBtn() {
   return '';
}
function panelmenu() {
   return '';
}
</script>
</head>
<body>
<pre>
<span class=C>-- VHDL Entity alien_game_lib.c4_t2_victory_effect.symbol</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - ACER.UNKNOWN (LAPTOP-PGKK1HS3)</span>
<span class=C>--          at - 19:15:21 05&#47;28&#47;2020</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>ENTITY</span> c4_t2_victory_effect <span class=K>IS</span>
   <span class=K>PORT</span>(
      clk     : <span class=A>IN</span>     <span class=T>std_logic</span>;
      rst     : <span class=A>IN</span>     <span class=T>std_logic</span>;
      color   : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (23 <span class=K>DOWNTO</span> 0);
      victory : <span class=A>OUT</span>    <span class=T>std_logic</span>;
      x_coord : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      y_coord : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0)
   );

<span class=C>-- Declarations</span>

<span class=K>END</span> c4_t2_victory_effect ;

<span class=C>--</span>
<span class=C>-- VHDL Architecture alien_game_lib.c4_t2_victory_effect.fsm</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - ACER.UNKNOWN (LAPTOP-PGKK1HS3)</span>
<span class=C>--          at - 19:15:21 05&#47;28&#47;2020</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>ARCHITECTURE</span> fsm <span class=K>OF</span> c4_t2_victory_effect <span class=K>IS</span>

   <span class=K>TYPE</span> STATE_TYPE <span class=K>IS</span> (
      s0,
      s1,
      s2,
      s3,
      s4,
      s5,
      s6,
      s7,
      s8,
      s9,
      s10,
      s11
   );

   <span class=C>-- Declare current and next state signals</span>
   <span class=K>SIGNAL</span> current_state : STATE_TYPE;
   <span class=K>SIGNAL</span> next_state : STATE_TYPE;

<span class=K>BEGIN</span>

   <span class=C>-----------------------------------------------------------------</span>
   clocked_proc : <span class=K>PROCESS</span> (
      clk,
      rst
   )
   <span class=C>-----------------------------------------------------------------</span>
   <span class=K>BEGIN</span>
      <span class=K>IF</span> (rst = '0') <span class=K>THEN</span>
         current_state <= s0;
      <span class=K>ELSIF</span> (clk'<span class=A>EVENT</span> <span class=K>AND</span> clk = '1') <span class=K>THEN</span>
         current_state <= next_state;
      <span class=K>END</span> <span class=K>IF</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> clocked_proc;

   <span class=C>-----------------------------------------------------------------</span>
   nextstate_proc : <span class=K>PROCESS</span> (
      current_state
   )
   <span class=C>-----------------------------------------------------------------</span>
   <span class=K>BEGIN</span>
      <span class=K>CASE</span> current_state <span class=K>IS</span>
         <span class=K>WHEN</span> s0 =>
            next_state <= s1;
         <span class=K>WHEN</span> s1 =>
            next_state <= s2;
         <span class=K>WHEN</span> s2 =>
            next_state <= s3;
         <span class=K>WHEN</span> s3 =>
            next_state <= s4;
         <span class=K>WHEN</span> s4 =>
            next_state <= s5;
         <span class=K>WHEN</span> s5 =>
            next_state <= s6;
         <span class=K>WHEN</span> s6 =>
            next_state <= s7;
         <span class=K>WHEN</span> s7 =>
            next_state <= s8;
         <span class=K>WHEN</span> s8 =>
            next_state <= s9;
         <span class=K>WHEN</span> s9 =>
            next_state <= s10;
         <span class=K>WHEN</span> s10 =>
            next_state <= s11;
         <span class=K>WHEN</span> s11 =>
            next_state <= s0;
         <span class=K>WHEN</span> <span class=K>OTHERS</span> =>
            next_state <= s0;
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> nextstate_proc;

   <span class=C>-----------------------------------------------------------------</span>
   output_proc : <span class=K>PROCESS</span> (
      current_state
   )
   <span class=C>-----------------------------------------------------------------</span>
   <span class=K>BEGIN</span>
      <span class=C>-- Default Assignment</span>
      color <= <span class=S>"000000111110110011111100"</span>;
      victory <= '0';
      x_coord <= <span class=S>"01000000"</span>;
      y_coord <= <span class=S>"00100000"</span>;

      <span class=C>-- Combined Actions</span>
      <span class=K>CASE</span> current_state <span class=K>IS</span>
         <span class=K>WHEN</span> s1 =>
            x_coord <= <span class=S>"01000000"</span>;
            y_coord <= <span class=S>"00100000"</span>;
         <span class=K>WHEN</span> s2 =>
            x_coord <= <span class=S>"00100000"</span>;
            y_coord <= <span class=S>"01000000"</span>;
         <span class=K>WHEN</span> s3 =>
            x_coord <= <span class=S>"01000000"</span>;
            y_coord <= <span class=S>"01000000"</span>;
         <span class=K>WHEN</span> s4 =>
            x_coord <= <span class=S>"00010000"</span>;
            y_coord <= <span class=S>"01000000"</span>;
         <span class=K>WHEN</span> s5 =>
            x_coord <= <span class=S>"00001000"</span>;
            y_coord <= <span class=S>"01000000"</span>;
         <span class=K>WHEN</span> s6 =>
            x_coord <= <span class=S>"00000100"</span>;
            y_coord <= <span class=S>"01000000"</span>;
         <span class=K>WHEN</span> s7 =>
            x_coord <= <span class=S>"00000010"</span>;
            y_coord <= <span class=S>"00100000"</span>;
         <span class=K>WHEN</span> s8 =>
            x_coord <= <span class=S>"00100000"</span>;
            y_coord <= <span class=S>"00000010"</span>;
         <span class=K>WHEN</span> s9 =>
            x_coord <= <span class=S>"00100000"</span>;
            y_coord <= <span class=S>"00000100"</span>;
         <span class=K>WHEN</span> s10 =>
            x_coord <= <span class=S>"00000100"</span>;
            y_coord <= <span class=S>"00000010"</span>;
         <span class=K>WHEN</span> s11 =>
            victory <= '1' ;
         <span class=K>WHEN</span> <span class=K>OTHERS</span> =>
            <span class=K>NULL</span>;
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> output_proc;

<span class=K>END</span> fsm;</pre>
<SCRIPT SRC="../../scripts/is.js"></SCRIPT><SCRIPT SRC="../../scripts/imageFrame.js"></SCRIPT>
</body>
