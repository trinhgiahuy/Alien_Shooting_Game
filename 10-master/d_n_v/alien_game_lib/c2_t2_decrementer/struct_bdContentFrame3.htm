<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head>
<title></title>
<link rel="Stylesheet" title="hdl2html stylesheet" media="Screen" href="../../scripts/hdl2html.css">
<!-- Generated by HDL Designer -->
<!--    at 15:42:32 on 05/31/2020 -->
<script language='javascript'>
function pagesBtn() {
   return '';
}
function panelmenu() {
   return '';
}
</script>
</head>
<body>
<pre>
<span class=C>-- VHDL Entity alien_game_lib.c2_t2_decrementer.symbol</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - bdgitr.UNKNOWN (HTC219-711-SPC)</span>
<span class=C>--          at - 14:07:23 22.02.2020</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>ENTITY</span> c2_t2_decrementer <span class=K>IS</span>
   <span class=K>PORT</span>(
      input_to_your_design : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (2 <span class=K>DOWNTO</span> 0);
      result               : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (2 <span class=K>DOWNTO</span> 0)
   );

<span class=C>-- Declarations</span>

<span class=K>END</span> c2_t2_decrementer ;

<span class=C>--</span>
<span class=C>-- VHDL Architecture alien_game_lib.c2_t2_decrementer.struct</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - bdgitr.UNKNOWN (HTC219-711-SPC)</span>
<span class=C>--          at - 14:29:02 22.02.2020</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>LIBRARY</span> alien_game_lib;

<span class=K>ARCHITECTURE</span> struct <span class=K>OF</span> c2_t2_decrementer <span class=K>IS</span>

   <span class=C>-- Architecture declarations</span>

   <span class=C>-- Internal signal declarations</span>
   <span class=K>SIGNAL</span> carry  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> carry1 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout   : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout0  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout1  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout2  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout3  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout4  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout5  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> sum    : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> sum1   : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> sum2   : <span class=T>std_logic</span>;


   <span class=C>-- ModuleWare signal declarations(v1.12) for instance 'U_0' of 'split'</span>
   <span class=K>SIGNAL</span> mw_U_0temp_din : <span class=T>std_logic_vector</span>(2 <span class=K>DOWNTO</span> 0);

   <span class=C>-- Component Declarations</span>
   <span class=K>COMPONENT</span> c2_t2_full_adder
   <span class=K>PORT</span> (
      cin   : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      sw0   : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      sw1   : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      carry : <span class=A>OUT</span>    <span class=T>std_logic</span> ;
      sum   : <span class=A>OUT</span>    <span class=T>std_logic</span>
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;

   <span class=C>-- Optional embedded configurations</span>
   <span class=C>-- pragma synthesis_off</span>
   <span class=K>FOR</span> <span class=K>ALL</span> : c2_t2_full_adder <span class=K>USE</span> <span class=K>ENTITY</span> alien_game_lib.c2_t2_full_adder;
   <span class=C>-- pragma synthesis_on</span>


<span class=K>BEGIN</span>

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_2' of 'constval'</span>
   dout <= '0';

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_3' of 'constval'</span>
   dout1 <= '1';

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_4' of 'constval'</span>
   dout5 <= '1';

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_5' of 'constval'</span>
   dout3 <= '1';

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_1' of 'merge'</span>
   result <= sum2 & sum1 & sum;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_0' of 'split'</span>
   mw_U_0temp_din <= input_to_your_design;
   u_0combo_proc: <span class=K>PROCESS</span> (mw_U_0temp_din)
   <span class=K>VARIABLE</span> temp_din: <span class=T>std_logic_vector</span>(2 <span class=K>DOWNTO</span> 0);
   <span class=K>BEGIN</span>
      temp_din := mw_U_0temp_din(2 <span class=K>DOWNTO</span> 0);
      dout0 <= temp_din(0);
      dout2 <= temp_din(1);
      dout4 <= temp_din(2);
   <span class=K>END</span> <span class=K>PROCESS</span> u_0combo_proc;

   <span class=C>-- Instance port mappings.</span>
   U_6 : c2_t2_full_adder
      <span class=K>PORT</span> <span class=K>MAP</span> (
         cin   => dout,
         sw0   => dout0,
         sw1   => dout1,
         carry => carry,
         sum   => sum
      );
   U_7 : c2_t2_full_adder
      <span class=K>PORT</span> <span class=K>MAP</span> (
         cin   => carry,
         sw0   => dout3,
         sw1   => dout2,
         carry => carry1,
         sum   => sum1
      );
   U_8 : c2_t2_full_adder
      <span class=K>PORT</span> <span class=K>MAP</span> (
         cin   => carry1,
         sw0   => dout5,
         sw1   => dout4,
         carry => <span class=K>OPEN</span>,
         sum   => sum2
      );

<span class=K>END</span> struct;</pre>
<SCRIPT SRC="../../scripts/is.js"></SCRIPT><SCRIPT SRC="../../scripts/imageFrame.js"></SCRIPT>
</body>
