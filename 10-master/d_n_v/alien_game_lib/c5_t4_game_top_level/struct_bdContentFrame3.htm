<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head>
<title></title>
<link rel="Stylesheet" title="hdl2html stylesheet" media="Screen" href="../../scripts/hdl2html.css">
<!-- Generated by HDL Designer -->
<!--    at 15:42:48 on 05/31/2020 -->
<script language='javascript'>
function pagesBtn() {
   return '';
}
function panelmenu() {
   return '';
}
</script>
</head>
<body>
<pre>
<span class=C>-- VHDL Entity alien_game_lib.c5_t4_game_top_level.symbol</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - ACER.UNKNOWN (LAPTOP-PGKK1HS3)</span>
<span class=C>--          at - 01:22:50 05&#47;31&#47;2020</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>ENTITY</span> c5_t4_game_top_level <span class=K>IS</span>
   <span class=K>PORT</span>(
      btn     : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (3 <span class=K>DOWNTO</span> 0);
      clk     : <span class=A>IN</span>     <span class=T>std_logic</span>;
      rst_n   : <span class=A>IN</span>     <span class=T>std_logic</span>;
      sw0     : <span class=A>IN</span>     <span class=T>std_logic</span>;
      channel : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      lat     : <span class=A>OUT</span>    <span class=T>std_logic</span>;
      s_clk   : <span class=A>OUT</span>    <span class=T>std_logic</span>;
      s_rst   : <span class=A>OUT</span>    <span class=T>std_logic</span>;
      s_sda   : <span class=A>OUT</span>    <span class=T>std_logic</span>;
      sb      : <span class=A>OUT</span>    <span class=T>std_logic</span>
   );

<span class=C>-- Declarations</span>

<span class=K>END</span> c5_t4_game_top_level ;

<span class=C>--</span>
<span class=C>-- VHDL Architecture alien_game_lib.c5_t4_game_top_level.struct</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - ACER.UNKNOWN (LAPTOP-PGKK1HS3)</span>
<span class=C>--          at - 01:22:50 05&#47;31&#47;2020</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>LIBRARY</span> alien_game_lib;

<span class=K>ARCHITECTURE</span> struct <span class=K>OF</span> c5_t4_game_top_level <span class=K>IS</span>

   <span class=C>-- Architecture declarations</span>

   <span class=C>-- Internal signal declarations</span>
   <span class=K>SIGNAL</span> color         : <span class=T>std_logic_vector</span>(23 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> frame_written : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> w_rdy         : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> write_out     : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> xw            : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> yw            : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);


   <span class=C>-- Component Declarations</span>
   <span class=K>COMPONENT</span> c5_t4_display_logic_top_level
   <span class=K>PORT</span> (
      clk           : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      frame_written : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      pixd_in       : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (23 <span class=K>DOWNTO</span> 0);
      rst_n         : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      write         : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      xw            : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7  <span class=K>DOWNTO</span> 0);
      yw            : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7  <span class=K>DOWNTO</span> 0);
      channel       : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      lat           : <span class=A>OUT</span>    <span class=T>std_logic</span> ;
      s_clk         : <span class=A>OUT</span>    <span class=T>std_logic</span> ;
      s_rst         : <span class=A>OUT</span>    <span class=T>std_logic</span> ;
      s_sda         : <span class=A>OUT</span>    <span class=T>std_logic</span> ;
      sb            : <span class=A>OUT</span>    <span class=T>std_logic</span> ;
      w_rdy         : <span class=A>OUT</span>    <span class=T>std_logic</span>
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;
   <span class=K>COMPONENT</span> c5_t4_game_logic_top_level
   <span class=K>PORT</span> (
      btn           : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (3 <span class=K>DOWNTO</span> 0);
      clk           : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      rst_n         : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      sw0           : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      w_rdy         : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      color         : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (23 <span class=K>DOWNTO</span> 0);
      frame_written : <span class=A>OUT</span>    <span class=T>std_logic</span> ;
      write_out     : <span class=A>OUT</span>    <span class=T>std_logic</span> ;
      xw            : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      yw            : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0)
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;

   <span class=C>-- Optional embedded configurations</span>
   <span class=C>-- pragma synthesis_off</span>
   <span class=K>FOR</span> <span class=K>ALL</span> : c5_t4_display_logic_top_level <span class=K>USE</span> <span class=K>ENTITY</span> alien_game_lib.c5_t4_display_logic_top_level;
   <span class=K>FOR</span> <span class=K>ALL</span> : c5_t4_game_logic_top_level <span class=K>USE</span> <span class=K>ENTITY</span> alien_game_lib.c5_t4_game_logic_top_level;
   <span class=C>-- pragma synthesis_on</span>


<span class=K>BEGIN</span>

   <span class=C>-- Instance port mappings.</span>
   U_1 : c5_t4_display_logic_top_level
      <span class=K>PORT</span> <span class=K>MAP</span> (
         clk           => clk,
         frame_written => frame_written,
         pixd_in       => color,
         rst_n         => rst_n,
         write         => write_out,
         xw            => xw,
         yw            => yw,
         channel       => channel,
         lat           => lat,
         s_clk         => s_clk,
         s_rst         => s_rst,
         s_sda         => s_sda,
         sb            => sb,
         w_rdy         => w_rdy
      );
   U_0 : c5_t4_game_logic_top_level
      <span class=K>PORT</span> <span class=K>MAP</span> (
         btn           => btn,
         clk           => clk,
         rst_n         => rst_n,
         sw0           => sw0,
         w_rdy         => w_rdy,
         color         => color,
         frame_written => frame_written,
         write_out     => write_out,
         xw            => xw,
         yw            => yw
      );

<span class=K>END</span> struct;</pre>
<SCRIPT SRC="../../scripts/is.js"></SCRIPT><SCRIPT SRC="../../scripts/imageFrame.js"></SCRIPT>
</body>
