<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head>
<title></title>
<link rel="Stylesheet" title="hdl2html stylesheet" media="Screen" href="../../scripts/hdl2html.css">
<!-- Generated by HDL Designer -->
<!--    at 15:42:34 on 05/31/2020 -->
<script language='javascript'>
function pagesBtn() {
   return '';
}
function panelmenu() {
   return '';
}
</script>
</head>
<body>
<pre>
<span class=C>-- VHDL Entity alien_game_lib.c2_t5_binary_to_one_hot_converter.symbol</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - bdgitr.UNKNOWN (HTC219-711-SPC)</span>
<span class=C>--          at - 14:40:24 22.02.2020</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>ENTITY</span> c2_t5_binary_to_one_hot_converter <span class=K>IS</span>
   <span class=K>PORT</span>(
      binary_in   : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (2 <span class=K>DOWNTO</span> 0);
      one_hot_out : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0)
   );

<span class=C>-- Declarations</span>

<span class=K>END</span> c2_t5_binary_to_one_hot_converter ;

<span class=C>--</span>
<span class=C>-- VHDL Architecture alien_game_lib.c2_t5_binary_to_one_hot_converter.tbl</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - bdgitr.UNKNOWN (HTC219-711-SPC)</span>
<span class=C>--          at - 14:52:33 22.02.2020</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;
<span class=K>ARCHITECTURE</span> tbl <span class=K>OF</span> c2_t5_binary_to_one_hot_converter <span class=K>IS</span>

      <span class=C>-- Architecture declarations</span>


<span class=K>BEGIN</span>

   <span class=C>-----------------------------------------------------------------</span>
   truth_process_proc: <span class=K>PROCESS</span>(binary_in)
   <span class=C>-----------------------------------------------------------------</span>
   <span class=K>BEGIN</span>
      <span class=C>-- Block 1</span>
      <span class=K>IF</span> (binary_in = <span class=S>"000"</span>) <span class=K>THEN</span>
         one_hot_out <= <span class=S>"00000001"</span>;
      <span class=K>ELSIF</span> (binary_in = <span class=S>"001"</span>) <span class=K>THEN</span>
         one_hot_out <= <span class=S>"00000010"</span>;
      <span class=K>ELSIF</span> (binary_in = <span class=S>"010"</span>) <span class=K>THEN</span>
         one_hot_out <= <span class=S>"00000100"</span>;
      <span class=K>ELSIF</span> (binary_in = <span class=S>"011"</span>) <span class=K>THEN</span>
         one_hot_out <= <span class=S>"00001000"</span>;
      <span class=K>ELSIF</span> (binary_in = <span class=S>"100"</span>) <span class=K>THEN</span>
         one_hot_out <= <span class=S>"00010000"</span>;
      <span class=K>ELSIF</span> (binary_in = <span class=S>"101"</span>) <span class=K>THEN</span>
         one_hot_out <= <span class=S>"00100000"</span>;
      <span class=K>ELSIF</span> (binary_in = <span class=S>"110"</span>) <span class=K>THEN</span>
         one_hot_out <= <span class=S>"01000000"</span>;
      <span class=K>ELSIF</span> (binary_in = <span class=S>"111"</span>) <span class=K>THEN</span>
         one_hot_out <= <span class=S>"10000000"</span>;
      <span class=K>END</span> <span class=K>IF</span>;

   <span class=K>END</span> <span class=K>PROCESS</span> truth_process_proc;

<span class=C>-- Architecture concurrent statements</span>


<span class=K>END</span> tbl;</pre>
<SCRIPT SRC="../../scripts/is.js"></SCRIPT><SCRIPT SRC="../../scripts/imageFrame.js"></SCRIPT>
</body>
