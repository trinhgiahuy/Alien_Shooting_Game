<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head>
<title>std_logic_arith.vhd</title>
<link rel="Stylesheet" title="hdl2html stylesheet" media="Screen" href="../scripts/hdl2html.css">
<!-- Generated by HDL Designer -->
<!--    at 22:20:13 on 05/29/2020 -->
<script language='javascript'>
function pagesBtn() {
   return '';
}
function panelmenu() {
   return '';
}
</script>
</head>
<body>
<pre>
<span class=C>--------------------------------------------------------------------------</span>
<span class=C>--                                                                      --</span>
<span class=C>-- Copyright (c) 1990,1991,1992 by Synopsys, Inc.  All rights reserved. --</span>
<span class=C>--                                                                      --</span>
<span class=C>-- This source file may be used and distributed without restriction     --</span>
<span class=C>-- provided that this copyright statement is not removed from the file  --</span>
<span class=C>-- and that any derivative work contains this copyright notice.         --</span>
<span class=C>--                                                                      --</span>
<span class=C>--	Package name: STD_LOGIC_ARITH					--</span>
<span class=C>--									--</span>
<span class=C>--	Purpose: 							--</span>
<span class=C>--	 A set of arithemtic, conversion, and comparison functions 	--</span>
<span class=C>--	 for SIGNED, UNSIGNED, SMALL_INT, INTEGER, 			--</span>
<span class=C>--	 STD_ULOGIC, STD_LOGIC, and STD_LOGIC_VECTOR.			--</span>
<span class=C>--									--</span>
<span class=C>--------------------------------------------------------------------------</span>

<span class=C>---------------------------------------------------</span>
<span class=C>-- Attributes added to invoke MTI builtin functions</span>
<span class=C>---------------------------------------------------</span>

<span class=K>library</span> IEEE;
<span class=K>use</span> IEEE.std_logic_1164.<span class=K>all</span>;

<span class=K>package</span> std_logic_arith <span class=K>is</span>

    <span class=K>type</span> UNSIGNED <span class=K>is</span> <span class=K>array</span> (<span class=T>NATURAL</span> <span class=K>range</span> <>) <span class=K>of</span> <span class=T>STD_LOGIC</span>;
    <span class=K>type</span> SIGNED <span class=K>is</span> <span class=K>array</span> (<span class=T>NATURAL</span> <span class=K>range</span> <>) <span class=K>of</span> <span class=T>STD_LOGIC</span>;
    <span class=K>subtype</span> SMALL_INT <span class=K>is</span> <span class=T>INTEGER</span> <span class=K>range</span> 0 <span class=K>to</span> 1;

    <span class=K>attribute</span> builtin_subprogram: <span class=T>string</span>;

    <span class=K>function</span> <span class=S>"+"</span>(L: UNSIGNED; R: UNSIGNED) <span class=K>return</span> UNSIGNED;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"+"</span>[UNSIGNED, UNSIGNED <span class=K>return</span> UNSIGNED]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_plus_uuu"</span>;

    <span class=K>function</span> <span class=S>"+"</span>(L: SIGNED; R: SIGNED) <span class=K>return</span> SIGNED;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"+"</span>[SIGNED, SIGNED <span class=K>return</span> SIGNED]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_plus_sss"</span>;

    <span class=K>function</span> <span class=S>"+"</span>(L: UNSIGNED; R: SIGNED) <span class=K>return</span> SIGNED;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"+"</span>[UNSIGNED, SIGNED <span class=K>return</span> SIGNED]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_plus_uss"</span>;

    <span class=K>function</span> <span class=S>"+"</span>(L: SIGNED; R: UNSIGNED) <span class=K>return</span> SIGNED;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"+"</span>[SIGNED, UNSIGNED <span class=K>return</span> SIGNED]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_plus_sus"</span>;

    <span class=K>function</span> <span class=S>"+"</span>(L: UNSIGNED; R: <span class=T>INTEGER</span>) <span class=K>return</span> UNSIGNED;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"+"</span>[UNSIGNED, <span class=T>INTEGER</span> <span class=K>return</span> UNSIGNED]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_plus_uiu"</span>;

    <span class=K>function</span> <span class=S>"+"</span>(L: <span class=T>INTEGER</span>; R: UNSIGNED) <span class=K>return</span> UNSIGNED;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"+"</span>[<span class=T>INTEGER</span>, UNSIGNED <span class=K>return</span> UNSIGNED]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_plus_iuu"</span>;

    <span class=K>function</span> <span class=S>"+"</span>(L: SIGNED; R: <span class=T>INTEGER</span>) <span class=K>return</span> SIGNED;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"+"</span>[SIGNED, <span class=T>INTEGER</span> <span class=K>return</span> SIGNED]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_plus_sis"</span>;

    <span class=K>function</span> <span class=S>"+"</span>(L: <span class=T>INTEGER</span>; R: SIGNED) <span class=K>return</span> SIGNED;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"+"</span>[<span class=T>INTEGER</span>, SIGNED <span class=K>return</span> SIGNED]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_plus_iss"</span>;

    <span class=K>function</span> <span class=S>"+"</span>(L: UNSIGNED; R: <span class=T>STD_ULOGIC</span>) <span class=K>return</span> UNSIGNED;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"+"</span>[UNSIGNED, <span class=T>STD_ULOGIC</span> <span class=K>return</span> UNSIGNED]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_plus_uxu"</span>;

    <span class=K>function</span> <span class=S>"+"</span>(L: <span class=T>STD_ULOGIC</span>; R: UNSIGNED) <span class=K>return</span> UNSIGNED;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"+"</span>[<span class=T>STD_ULOGIC</span>, UNSIGNED <span class=K>return</span> UNSIGNED]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_plus_xuu"</span>;

    <span class=K>function</span> <span class=S>"+"</span>(L: SIGNED; R: <span class=T>STD_ULOGIC</span>) <span class=K>return</span> SIGNED;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"+"</span>[SIGNED, <span class=T>STD_ULOGIC</span> <span class=K>return</span> SIGNED]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_plus_sxs"</span>;

    <span class=K>function</span> <span class=S>"+"</span>(L: <span class=T>STD_ULOGIC</span>; R: SIGNED) <span class=K>return</span> SIGNED;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"+"</span>[<span class=T>STD_ULOGIC</span>, SIGNED <span class=K>return</span> SIGNED]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_plus_xss"</span>;

    <span class=K>function</span> <span class=S>"+"</span>(L: UNSIGNED; R: UNSIGNED) <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"+"</span>[UNSIGNED, UNSIGNED <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_plus_uuu"</span>;

    <span class=K>function</span> <span class=S>"+"</span>(L: SIGNED; R: SIGNED) <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"+"</span>[SIGNED, SIGNED <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_plus_sss"</span>;

    <span class=K>function</span> <span class=S>"+"</span>(L: UNSIGNED; R: SIGNED) <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"+"</span>[UNSIGNED, SIGNED <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_plus_uss"</span>;

    <span class=K>function</span> <span class=S>"+"</span>(L: SIGNED; R: UNSIGNED) <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"+"</span>[SIGNED, UNSIGNED <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_plus_sus"</span>;

    <span class=K>function</span> <span class=S>"+"</span>(L: UNSIGNED; R: <span class=T>INTEGER</span>) <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"+"</span>[UNSIGNED, <span class=T>INTEGER</span> <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_plus_uiu"</span>;

    <span class=K>function</span> <span class=S>"+"</span>(L: <span class=T>INTEGER</span>; R: UNSIGNED) <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"+"</span>[<span class=T>INTEGER</span>, UNSIGNED <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_plus_iuu"</span>;

    <span class=K>function</span> <span class=S>"+"</span>(L: SIGNED; R: <span class=T>INTEGER</span>) <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"+"</span>[SIGNED, <span class=T>INTEGER</span> <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_plus_sis"</span>;

    <span class=K>function</span> <span class=S>"+"</span>(L: <span class=T>INTEGER</span>; R: SIGNED) <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"+"</span>[<span class=T>INTEGER</span>, SIGNED <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_plus_iss"</span>;

    <span class=K>function</span> <span class=S>"+"</span>(L: UNSIGNED; R: <span class=T>STD_ULOGIC</span>) <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"+"</span>[UNSIGNED, <span class=T>STD_ULOGIC</span> <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_plus_uxu"</span>;

    <span class=K>function</span> <span class=S>"+"</span>(L: <span class=T>STD_ULOGIC</span>; R: UNSIGNED) <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"+"</span>[<span class=T>STD_ULOGIC</span>, UNSIGNED <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_plus_xuu"</span>;

    <span class=K>function</span> <span class=S>"+"</span>(L: SIGNED; R: <span class=T>STD_ULOGIC</span>) <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"+"</span>[SIGNED, <span class=T>STD_ULOGIC</span> <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_plus_sxs"</span>;

    <span class=K>function</span> <span class=S>"+"</span>(L: <span class=T>STD_ULOGIC</span>; R: SIGNED) <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"+"</span>[<span class=T>STD_ULOGIC</span>, SIGNED <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_plus_xss"</span>;


    <span class=K>function</span> <span class=S>"-"</span>(L: UNSIGNED; R: UNSIGNED) <span class=K>return</span> UNSIGNED;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"-"</span>[UNSIGNED, UNSIGNED <span class=K>return</span> UNSIGNED]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_minus_uuu"</span>;

    <span class=K>function</span> <span class=S>"-"</span>(L: SIGNED; R: SIGNED) <span class=K>return</span> SIGNED;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"-"</span>[SIGNED, SIGNED <span class=K>return</span> SIGNED]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_minus_sss"</span>;

    <span class=K>function</span> <span class=S>"-"</span>(L: UNSIGNED; R: SIGNED) <span class=K>return</span> SIGNED;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"-"</span>[UNSIGNED, SIGNED <span class=K>return</span> SIGNED]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_minus_uss"</span>;

    <span class=K>function</span> <span class=S>"-"</span>(L: SIGNED; R: UNSIGNED) <span class=K>return</span> SIGNED;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"-"</span>[SIGNED, UNSIGNED <span class=K>return</span> SIGNED]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_minus_sus"</span>;

    <span class=K>function</span> <span class=S>"-"</span>(L: UNSIGNED; R: <span class=T>INTEGER</span>) <span class=K>return</span> UNSIGNED;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"-"</span>[UNSIGNED, <span class=T>INTEGER</span> <span class=K>return</span> UNSIGNED]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_minus_uiu"</span>;

    <span class=K>function</span> <span class=S>"-"</span>(L: <span class=T>INTEGER</span>; R: UNSIGNED) <span class=K>return</span> UNSIGNED;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"-"</span>[<span class=T>INTEGER</span>, UNSIGNED <span class=K>return</span> UNSIGNED]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_minus_iuu"</span>;

    <span class=K>function</span> <span class=S>"-"</span>(L: SIGNED; R: <span class=T>INTEGER</span>) <span class=K>return</span> SIGNED;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"-"</span>[SIGNED, <span class=T>INTEGER</span> <span class=K>return</span> SIGNED]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_minus_sis"</span>;

    <span class=K>function</span> <span class=S>"-"</span>(L: <span class=T>INTEGER</span>; R: SIGNED) <span class=K>return</span> SIGNED;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"-"</span>[<span class=T>INTEGER</span>, SIGNED <span class=K>return</span> SIGNED]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_minus_iss"</span>;

    <span class=K>function</span> <span class=S>"-"</span>(L: UNSIGNED; R: <span class=T>STD_ULOGIC</span>) <span class=K>return</span> UNSIGNED;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"-"</span>[UNSIGNED, <span class=T>STD_ULOGIC</span> <span class=K>return</span> UNSIGNED]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_minus_uxu"</span>;

    <span class=K>function</span> <span class=S>"-"</span>(L: <span class=T>STD_ULOGIC</span>; R: UNSIGNED) <span class=K>return</span> UNSIGNED;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"-"</span>[<span class=T>STD_ULOGIC</span>, UNSIGNED <span class=K>return</span> UNSIGNED]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_minus_xuu"</span>;

    <span class=K>function</span> <span class=S>"-"</span>(L: SIGNED; R: <span class=T>STD_ULOGIC</span>) <span class=K>return</span> SIGNED;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"-"</span>[SIGNED, <span class=T>STD_ULOGIC</span> <span class=K>return</span> SIGNED]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_minus_sxs"</span>;

    <span class=K>function</span> <span class=S>"-"</span>(L: <span class=T>STD_ULOGIC</span>; R: SIGNED) <span class=K>return</span> SIGNED;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"-"</span>[<span class=T>STD_ULOGIC</span>, SIGNED <span class=K>return</span> SIGNED]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_minus_xss"</span>;

    <span class=K>function</span> <span class=S>"-"</span>(L: UNSIGNED; R: UNSIGNED) <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"-"</span>[UNSIGNED, UNSIGNED <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_minus_uuu"</span>;

    <span class=K>function</span> <span class=S>"-"</span>(L: SIGNED; R: SIGNED) <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"-"</span>[SIGNED, SIGNED <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_minus_sss"</span>;

    <span class=K>function</span> <span class=S>"-"</span>(L: UNSIGNED; R: SIGNED) <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"-"</span>[UNSIGNED, SIGNED <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_minus_uss"</span>;

    <span class=K>function</span> <span class=S>"-"</span>(L: SIGNED; R: UNSIGNED) <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"-"</span>[SIGNED, UNSIGNED <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_minus_sus"</span>;

    <span class=K>function</span> <span class=S>"-"</span>(L: UNSIGNED; R: <span class=T>INTEGER</span>) <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"-"</span>[UNSIGNED, <span class=T>INTEGER</span> <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_minus_uiu"</span>;

    <span class=K>function</span> <span class=S>"-"</span>(L: <span class=T>INTEGER</span>; R: UNSIGNED) <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"-"</span>[<span class=T>INTEGER</span>, UNSIGNED <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_minus_iuu"</span>;

    <span class=K>function</span> <span class=S>"-"</span>(L: SIGNED; R: <span class=T>INTEGER</span>) <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"-"</span>[SIGNED, <span class=T>INTEGER</span> <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_minus_sis"</span>;

    <span class=K>function</span> <span class=S>"-"</span>(L: <span class=T>INTEGER</span>; R: SIGNED) <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"-"</span>[<span class=T>INTEGER</span>, SIGNED <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_minus_iss"</span>;

    <span class=K>function</span> <span class=S>"-"</span>(L: UNSIGNED; R: <span class=T>STD_ULOGIC</span>) <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"-"</span>[UNSIGNED, <span class=T>STD_ULOGIC</span> <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_minus_uxu"</span>;

    <span class=K>function</span> <span class=S>"-"</span>(L: <span class=T>STD_ULOGIC</span>; R: UNSIGNED) <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"-"</span>[<span class=T>STD_ULOGIC</span>, UNSIGNED <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_minus_xuu"</span>;

    <span class=K>function</span> <span class=S>"-"</span>(L: SIGNED; R: <span class=T>STD_ULOGIC</span>) <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"-"</span>[SIGNED, <span class=T>STD_ULOGIC</span> <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_minus_sxs"</span>;

    <span class=K>function</span> <span class=S>"-"</span>(L: <span class=T>STD_ULOGIC</span>; R: SIGNED) <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"-"</span>[<span class=T>STD_ULOGIC</span>, SIGNED <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_minus_xss"</span>;

    <span class=K>function</span> <span class=S>"+"</span>(L: UNSIGNED) <span class=K>return</span> UNSIGNED;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"+"</span>[UNSIGNED <span class=K>return</span> UNSIGNED]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_unary_plus_uu"</span>;

    <span class=K>function</span> <span class=S>"+"</span>(L: SIGNED) <span class=K>return</span> SIGNED;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"+"</span>[SIGNED <span class=K>return</span> SIGNED]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_unary_plus_ss"</span>;

    <span class=K>function</span> <span class=S>"-"</span>(L: SIGNED) <span class=K>return</span> SIGNED;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"-"</span>[SIGNED <span class=K>return</span> SIGNED]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_unary_minus_ss"</span>;

    <span class=K>function</span> <span class=S>"ABS"</span>(L: SIGNED) <span class=K>return</span> SIGNED;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"ABS"</span>[SIGNED <span class=K>return</span> SIGNED]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_abs_ss"</span>;


    <span class=K>function</span> <span class=S>"+"</span>(L: UNSIGNED) <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"+"</span>[UNSIGNED <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_unary_plus_uu"</span>;

    <span class=K>function</span> <span class=S>"+"</span>(L: SIGNED) <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"+"</span>[SIGNED <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_unary_plus_ss"</span>;

    <span class=K>function</span> <span class=S>"-"</span>(L: SIGNED) <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"-"</span>[SIGNED <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_unary_minus_ss"</span>;

    <span class=K>function</span> <span class=S>"ABS"</span>(L: SIGNED) <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"ABS"</span>[SIGNED <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_abs_ss"</span>;

    <span class=K>function</span> <span class=S>"*"</span>(L: UNSIGNED; R: UNSIGNED) <span class=K>return</span> UNSIGNED;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"*"</span>[UNSIGNED, UNSIGNED <span class=K>return</span> UNSIGNED]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_mult_uuu"</span>;

    <span class=K>function</span> <span class=S>"*"</span>(L: SIGNED; R: SIGNED) <span class=K>return</span> SIGNED;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"*"</span>[SIGNED, SIGNED <span class=K>return</span> SIGNED]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_mult_sss"</span>;

    <span class=K>function</span> <span class=S>"*"</span>(L: SIGNED; R: UNSIGNED) <span class=K>return</span> SIGNED;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"*"</span>[SIGNED, UNSIGNED <span class=K>return</span> SIGNED]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_mult_sus"</span>;

    <span class=K>function</span> <span class=S>"*"</span>(L: UNSIGNED; R: SIGNED) <span class=K>return</span> SIGNED;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"*"</span>[UNSIGNED, SIGNED <span class=K>return</span> SIGNED]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_mult_uss"</span>;


    <span class=K>function</span> <span class=S>"*"</span>(L: UNSIGNED; R: UNSIGNED) <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"*"</span>[UNSIGNED, UNSIGNED <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_mult_uuu"</span>;

    <span class=K>function</span> <span class=S>"*"</span>(L: SIGNED; R: SIGNED) <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"*"</span>[SIGNED, SIGNED <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_mult_sss"</span>;

    <span class=K>function</span> <span class=S>"*"</span>(L: SIGNED; R: UNSIGNED) <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"*"</span>[SIGNED, UNSIGNED <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_mult_sus"</span>;

    <span class=K>function</span> <span class=S>"*"</span>(L: UNSIGNED; R: SIGNED) <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"*"</span>[UNSIGNED, SIGNED <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_mult_uss"</span>;


    <span class=K>function</span> <span class=S>"<"</span>(L: UNSIGNED; R: UNSIGNED) <span class=K>return</span> <span class=T>BOOLEAN</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"<"</span>[UNSIGNED, UNSIGNED <span class=K>return</span> <span class=T>BOOLEAN</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_lt_uu"</span>;

    <span class=K>function</span> <span class=S>"<"</span>(L: SIGNED; R: SIGNED) <span class=K>return</span> <span class=T>BOOLEAN</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"<"</span>[SIGNED, SIGNED <span class=K>return</span> <span class=T>BOOLEAN</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_lt_ss"</span>;

    <span class=K>function</span> <span class=S>"<"</span>(L: UNSIGNED; R: SIGNED) <span class=K>return</span> <span class=T>BOOLEAN</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"<"</span>[UNSIGNED, SIGNED <span class=K>return</span> <span class=T>BOOLEAN</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_lt_us"</span>;

    <span class=K>function</span> <span class=S>"<"</span>(L: SIGNED; R: UNSIGNED) <span class=K>return</span> <span class=T>BOOLEAN</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"<"</span>[SIGNED, UNSIGNED <span class=K>return</span> <span class=T>BOOLEAN</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_lt_su"</span>;

    <span class=K>function</span> <span class=S>"<"</span>(L: UNSIGNED; R: <span class=T>INTEGER</span>) <span class=K>return</span> <span class=T>BOOLEAN</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"<"</span>[UNSIGNED, <span class=T>INTEGER</span> <span class=K>return</span> <span class=T>BOOLEAN</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_lt_ui"</span>;

    <span class=K>function</span> <span class=S>"<"</span>(L: <span class=T>INTEGER</span>; R: UNSIGNED) <span class=K>return</span> <span class=T>BOOLEAN</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"<"</span>[<span class=T>INTEGER</span>, UNSIGNED <span class=K>return</span> <span class=T>BOOLEAN</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_lt_iu"</span>;

    <span class=K>function</span> <span class=S>"<"</span>(L: SIGNED; R: <span class=T>INTEGER</span>) <span class=K>return</span> <span class=T>BOOLEAN</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"<"</span>[SIGNED, <span class=T>INTEGER</span> <span class=K>return</span> <span class=T>BOOLEAN</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_lt_si"</span>;

    <span class=K>function</span> <span class=S>"<"</span>(L: <span class=T>INTEGER</span>; R: SIGNED) <span class=K>return</span> <span class=T>BOOLEAN</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"<"</span>[<span class=T>INTEGER</span>, SIGNED <span class=K>return</span> <span class=T>BOOLEAN</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_lt_is"</span>;

    <span class=K>function</span> <span class=S>"<="</span>(L: UNSIGNED; R: UNSIGNED) <span class=K>return</span> <span class=T>BOOLEAN</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"<="</span>[UNSIGNED, UNSIGNED <span class=K>return</span> <span class=T>BOOLEAN</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_lte_uu"</span>;

    <span class=K>function</span> <span class=S>"<="</span>(L: SIGNED; R: SIGNED) <span class=K>return</span> <span class=T>BOOLEAN</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"<="</span>[SIGNED, SIGNED <span class=K>return</span> <span class=T>BOOLEAN</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_lte_ss"</span>;

    <span class=K>function</span> <span class=S>"<="</span>(L: UNSIGNED; R: SIGNED) <span class=K>return</span> <span class=T>BOOLEAN</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"<="</span>[UNSIGNED, SIGNED <span class=K>return</span> <span class=T>BOOLEAN</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_lte_us"</span>;

    <span class=K>function</span> <span class=S>"<="</span>(L: SIGNED; R: UNSIGNED) <span class=K>return</span> <span class=T>BOOLEAN</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"<="</span>[SIGNED, UNSIGNED <span class=K>return</span> <span class=T>BOOLEAN</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_lte_su"</span>;

    <span class=K>function</span> <span class=S>"<="</span>(L: UNSIGNED; R: <span class=T>INTEGER</span>) <span class=K>return</span> <span class=T>BOOLEAN</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"<="</span>[UNSIGNED, <span class=T>INTEGER</span> <span class=K>return</span> <span class=T>BOOLEAN</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_lte_ui"</span>;

    <span class=K>function</span> <span class=S>"<="</span>(L: <span class=T>INTEGER</span>; R: UNSIGNED) <span class=K>return</span> <span class=T>BOOLEAN</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"<="</span>[<span class=T>INTEGER</span>, UNSIGNED <span class=K>return</span> <span class=T>BOOLEAN</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_lte_iu"</span>;

    <span class=K>function</span> <span class=S>"<="</span>(L: SIGNED; R: <span class=T>INTEGER</span>) <span class=K>return</span> <span class=T>BOOLEAN</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"<="</span>[SIGNED, <span class=T>INTEGER</span> <span class=K>return</span> <span class=T>BOOLEAN</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_lte_si"</span>;

    <span class=K>function</span> <span class=S>"<="</span>(L: <span class=T>INTEGER</span>; R: SIGNED) <span class=K>return</span> <span class=T>BOOLEAN</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"<="</span>[<span class=T>INTEGER</span>, SIGNED <span class=K>return</span> <span class=T>BOOLEAN</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_lte_is"</span>;


    <span class=K>function</span> <span class=S>">"</span>(L: UNSIGNED; R: UNSIGNED) <span class=K>return</span> <span class=T>BOOLEAN</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>">"</span>[UNSIGNED, UNSIGNED <span class=K>return</span> <span class=T>BOOLEAN</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_gt_uu"</span>;

    <span class=K>function</span> <span class=S>">"</span>(L: SIGNED; R: SIGNED) <span class=K>return</span> <span class=T>BOOLEAN</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>">"</span>[SIGNED, SIGNED <span class=K>return</span> <span class=T>BOOLEAN</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_gt_ss"</span>;

    <span class=K>function</span> <span class=S>">"</span>(L: UNSIGNED; R: SIGNED) <span class=K>return</span> <span class=T>BOOLEAN</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>">"</span>[UNSIGNED, SIGNED <span class=K>return</span> <span class=T>BOOLEAN</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_gt_us"</span>;

    <span class=K>function</span> <span class=S>">"</span>(L: SIGNED; R: UNSIGNED) <span class=K>return</span> <span class=T>BOOLEAN</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>">"</span>[SIGNED, UNSIGNED <span class=K>return</span> <span class=T>BOOLEAN</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_gt_su"</span>;

    <span class=K>function</span> <span class=S>">"</span>(L: UNSIGNED; R: <span class=T>INTEGER</span>) <span class=K>return</span> <span class=T>BOOLEAN</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>">"</span>[UNSIGNED, <span class=T>INTEGER</span> <span class=K>return</span> <span class=T>BOOLEAN</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_gt_ui"</span>;

    <span class=K>function</span> <span class=S>">"</span>(L: <span class=T>INTEGER</span>; R: UNSIGNED) <span class=K>return</span> <span class=T>BOOLEAN</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>">"</span>[<span class=T>INTEGER</span>, UNSIGNED <span class=K>return</span> <span class=T>BOOLEAN</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_gt_iu"</span>;

    <span class=K>function</span> <span class=S>">"</span>(L: SIGNED; R: <span class=T>INTEGER</span>) <span class=K>return</span> <span class=T>BOOLEAN</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>">"</span>[SIGNED, <span class=T>INTEGER</span> <span class=K>return</span> <span class=T>BOOLEAN</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_gt_si"</span>;

    <span class=K>function</span> <span class=S>">"</span>(L: <span class=T>INTEGER</span>; R: SIGNED) <span class=K>return</span> <span class=T>BOOLEAN</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>">"</span>[<span class=T>INTEGER</span>, SIGNED <span class=K>return</span> <span class=T>BOOLEAN</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_gt_is"</span>;


    <span class=K>function</span> <span class=S>">="</span>(L: UNSIGNED; R: UNSIGNED) <span class=K>return</span> <span class=T>BOOLEAN</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>">="</span>[UNSIGNED, UNSIGNED <span class=K>return</span> <span class=T>BOOLEAN</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_gte_uu"</span>;

    <span class=K>function</span> <span class=S>">="</span>(L: SIGNED; R: SIGNED) <span class=K>return</span> <span class=T>BOOLEAN</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>">="</span>[SIGNED, SIGNED <span class=K>return</span> <span class=T>BOOLEAN</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_gte_ss"</span>;

    <span class=K>function</span> <span class=S>">="</span>(L: UNSIGNED; R: SIGNED) <span class=K>return</span> <span class=T>BOOLEAN</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>">="</span>[UNSIGNED, SIGNED <span class=K>return</span> <span class=T>BOOLEAN</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_gte_us"</span>;

    <span class=K>function</span> <span class=S>">="</span>(L: SIGNED; R: UNSIGNED) <span class=K>return</span> <span class=T>BOOLEAN</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>">="</span>[SIGNED, UNSIGNED <span class=K>return</span> <span class=T>BOOLEAN</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_gte_su"</span>;

    <span class=K>function</span> <span class=S>">="</span>(L: UNSIGNED; R: <span class=T>INTEGER</span>) <span class=K>return</span> <span class=T>BOOLEAN</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>">="</span>[UNSIGNED, <span class=T>INTEGER</span> <span class=K>return</span> <span class=T>BOOLEAN</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_gte_ui"</span>;

    <span class=K>function</span> <span class=S>">="</span>(L: <span class=T>INTEGER</span>; R: UNSIGNED) <span class=K>return</span> <span class=T>BOOLEAN</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>">="</span>[<span class=T>INTEGER</span>, UNSIGNED <span class=K>return</span> <span class=T>BOOLEAN</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_gte_iu"</span>;

    <span class=K>function</span> <span class=S>">="</span>(L: SIGNED; R: <span class=T>INTEGER</span>) <span class=K>return</span> <span class=T>BOOLEAN</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>">="</span>[SIGNED, <span class=T>INTEGER</span> <span class=K>return</span> <span class=T>BOOLEAN</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_gte_si"</span>;

    <span class=K>function</span> <span class=S>">="</span>(L: <span class=T>INTEGER</span>; R: SIGNED) <span class=K>return</span> <span class=T>BOOLEAN</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>">="</span>[<span class=T>INTEGER</span>, SIGNED <span class=K>return</span> <span class=T>BOOLEAN</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_gte_is"</span>;


    <span class=K>function</span> <span class=S>"="</span>(L: UNSIGNED; R: UNSIGNED) <span class=K>return</span> <span class=T>BOOLEAN</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"="</span>[UNSIGNED, UNSIGNED <span class=K>return</span> <span class=T>BOOLEAN</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_eq_uu"</span>;

    <span class=K>function</span> <span class=S>"="</span>(L: SIGNED; R: SIGNED) <span class=K>return</span> <span class=T>BOOLEAN</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"="</span>[SIGNED, SIGNED <span class=K>return</span> <span class=T>BOOLEAN</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_eq_ss"</span>;

    <span class=K>function</span> <span class=S>"="</span>(L: UNSIGNED; R: SIGNED) <span class=K>return</span> <span class=T>BOOLEAN</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"="</span>[UNSIGNED, SIGNED <span class=K>return</span> <span class=T>BOOLEAN</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_eq_us"</span>;

    <span class=K>function</span> <span class=S>"="</span>(L: SIGNED; R: UNSIGNED) <span class=K>return</span> <span class=T>BOOLEAN</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"="</span>[SIGNED, UNSIGNED <span class=K>return</span> <span class=T>BOOLEAN</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_eq_su"</span>;

    <span class=K>function</span> <span class=S>"="</span>(L: UNSIGNED; R: <span class=T>INTEGER</span>) <span class=K>return</span> <span class=T>BOOLEAN</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"="</span>[UNSIGNED, <span class=T>INTEGER</span> <span class=K>return</span> <span class=T>BOOLEAN</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_eq_ui"</span>;

    <span class=K>function</span> <span class=S>"="</span>(L: <span class=T>INTEGER</span>; R: UNSIGNED) <span class=K>return</span> <span class=T>BOOLEAN</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"="</span>[<span class=T>INTEGER</span>, UNSIGNED <span class=K>return</span> <span class=T>BOOLEAN</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_eq_iu"</span>;

    <span class=K>function</span> <span class=S>"="</span>(L: SIGNED; R: <span class=T>INTEGER</span>) <span class=K>return</span> <span class=T>BOOLEAN</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"="</span>[SIGNED, <span class=T>INTEGER</span> <span class=K>return</span> <span class=T>BOOLEAN</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_eq_si"</span>;

    <span class=K>function</span> <span class=S>"="</span>(L: <span class=T>INTEGER</span>; R: SIGNED) <span class=K>return</span> <span class=T>BOOLEAN</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"="</span>[<span class=T>INTEGER</span>, SIGNED <span class=K>return</span> <span class=T>BOOLEAN</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_eq_is"</span>;


    <span class=K>function</span> <span class=S>"/="</span>(L: UNSIGNED; R: UNSIGNED) <span class=K>return</span> <span class=T>BOOLEAN</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"/="</span>[UNSIGNED, UNSIGNED <span class=K>return</span> <span class=T>BOOLEAN</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_neq_uu"</span>;

    <span class=K>function</span> <span class=S>"/="</span>(L: SIGNED; R: SIGNED) <span class=K>return</span> <span class=T>BOOLEAN</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"/="</span>[SIGNED, SIGNED <span class=K>return</span> <span class=T>BOOLEAN</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_neq_ss"</span>;

    <span class=K>function</span> <span class=S>"/="</span>(L: UNSIGNED; R: SIGNED) <span class=K>return</span> <span class=T>BOOLEAN</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"/="</span>[UNSIGNED, SIGNED <span class=K>return</span> <span class=T>BOOLEAN</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_neq_us"</span>;

    <span class=K>function</span> <span class=S>"/="</span>(L: SIGNED; R: UNSIGNED) <span class=K>return</span> <span class=T>BOOLEAN</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"/="</span>[SIGNED, UNSIGNED <span class=K>return</span> <span class=T>BOOLEAN</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_neq_su"</span>;

    <span class=K>function</span> <span class=S>"/="</span>(L: UNSIGNED; R: <span class=T>INTEGER</span>) <span class=K>return</span> <span class=T>BOOLEAN</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"/="</span>[UNSIGNED, <span class=T>INTEGER</span> <span class=K>return</span> <span class=T>BOOLEAN</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_neq_ui"</span>;

    <span class=K>function</span> <span class=S>"/="</span>(L: <span class=T>INTEGER</span>; R: UNSIGNED) <span class=K>return</span> <span class=T>BOOLEAN</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"/="</span>[<span class=T>INTEGER</span>, UNSIGNED <span class=K>return</span> <span class=T>BOOLEAN</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_neq_iu"</span>;

    <span class=K>function</span> <span class=S>"/="</span>(L: SIGNED; R: <span class=T>INTEGER</span>) <span class=K>return</span> <span class=T>BOOLEAN</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"/="</span>[SIGNED, <span class=T>INTEGER</span> <span class=K>return</span> <span class=T>BOOLEAN</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_neq_si"</span>;

    <span class=K>function</span> <span class=S>"/="</span>(L: <span class=T>INTEGER</span>; R: SIGNED) <span class=K>return</span> <span class=T>BOOLEAN</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        <span class=S>"/="</span>[<span class=T>INTEGER</span>, SIGNED <span class=K>return</span> <span class=T>BOOLEAN</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_neq_is"</span>;


    <span class=K>function</span> SHL(ARG: UNSIGNED; COUNT: UNSIGNED) <span class=K>return</span> UNSIGNED;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        SHL[UNSIGNED, UNSIGNED <span class=K>return</span> UNSIGNED]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_shl_uuu"</span>;

    <span class=K>function</span> SHL(ARG: SIGNED; COUNT: UNSIGNED) <span class=K>return</span> SIGNED;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        SHL[SIGNED, UNSIGNED <span class=K>return</span> SIGNED]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_shl_sus"</span>;

    <span class=K>function</span> SHR(ARG: UNSIGNED; COUNT: UNSIGNED) <span class=K>return</span> UNSIGNED;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        SHR[UNSIGNED, UNSIGNED <span class=K>return</span> UNSIGNED]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_shr_uuu"</span>;

    <span class=K>function</span> SHR(ARG: SIGNED; COUNT: UNSIGNED) <span class=K>return</span> SIGNED;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        SHR[SIGNED, UNSIGNED <span class=K>return</span> SIGNED]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_shr_sus"</span>;


    <span class=K>function</span> CONV_INTEGER(ARG: <span class=T>INTEGER</span>) <span class=K>return</span> <span class=T>INTEGER</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        CONV_INTEGER[<span class=T>INTEGER</span> <span class=K>return</span> <span class=T>INTEGER</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_conv_integer_ii"</span>;

    <span class=K>function</span> CONV_INTEGER(ARG: UNSIGNED) <span class=K>return</span> <span class=T>INTEGER</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        CONV_INTEGER[UNSIGNED <span class=K>return</span> <span class=T>INTEGER</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_conv_integer_ui2"</span>;
<span class=C>------------------------------------------------------------------------------------------</span>
<span class=C>--  If desired, you may select an optional implementation for CONV_INTEGER(UNSIGNED)</span>
<span class=C>--  by changing the value of the attribute:</span>
<span class=C>--      stdarith_conv_integer_ui implements the original CONV_INTEGER(UNSIGNED) VHDL which</span>
<span class=C>--          generates an error if the argument is larger than 31 bits.</span>
<span class=C>--      stdarith_conv_integer_ui2 allows 32 bits. It generates a warning if the</span>
<span class=C>--          argument is 32 bits and the MSB is not zero.</span>
<span class=C>--      The default is stdarith_conv_integer_ui2.</span>
<span class=C>--</span>
<span class=C>--    attribute builtin_subprogram of</span>
<span class=C>--        CONV_INTEGER[UNSIGNED return INTEGER]: function is &quot;stdarith_conv_integer_ui&quot;; </span>
<span class=C>------------------------------------------------------------------------------------------</span>

    <span class=K>function</span> CONV_INTEGER(ARG: SIGNED) <span class=K>return</span> <span class=T>INTEGER</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        CONV_INTEGER[SIGNED <span class=K>return</span> <span class=T>INTEGER</span>]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_conv_integer_si"</span>;

    <span class=K>function</span> CONV_INTEGER(ARG: <span class=T>STD_ULOGIC</span>) <span class=K>return</span> SMALL_INT;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        CONV_INTEGER[<span class=T>STD_ULOGIC</span> <span class=K>return</span> SMALL_INT]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_conv_integer_xz"</span>;


    <span class=K>function</span> CONV_UNSIGNED(ARG: <span class=T>INTEGER</span>; SIZE: <span class=T>INTEGER</span>) <span class=K>return</span> UNSIGNED;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        CONV_UNSIGNED [<span class=T>INTEGER</span>, <span class=T>INTEGER</span> <span class=K>return</span> UNSIGNED]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_conv_unsigned_iu"</span>;

    <span class=K>function</span> CONV_UNSIGNED(ARG: UNSIGNED; SIZE: <span class=T>INTEGER</span>) <span class=K>return</span> UNSIGNED;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        CONV_UNSIGNED [UNSIGNED, <span class=T>INTEGER</span> <span class=K>return</span> UNSIGNED]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_conv_unsigned_uu"</span>;

    <span class=K>function</span> CONV_UNSIGNED(ARG: SIGNED; SIZE: <span class=T>INTEGER</span>) <span class=K>return</span> UNSIGNED;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        CONV_UNSIGNED [SIGNED, <span class=T>INTEGER</span> <span class=K>return</span> UNSIGNED]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_conv_unsigned_su"</span>;

    <span class=K>function</span> CONV_UNSIGNED(ARG: <span class=T>STD_ULOGIC</span>; SIZE: <span class=T>INTEGER</span>) <span class=K>return</span> UNSIGNED;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        CONV_UNSIGNED [<span class=T>STD_ULOGIC</span>, <span class=T>INTEGER</span> <span class=K>return</span> UNSIGNED]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_conv_unsigned_xu"</span>;


    <span class=K>function</span> CONV_SIGNED(ARG: <span class=T>INTEGER</span>; SIZE: <span class=T>INTEGER</span>) <span class=K>return</span> SIGNED;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        CONV_SIGNED [<span class=T>INTEGER</span>, <span class=T>INTEGER</span> <span class=K>return</span> SIGNED]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_conv_signed_is"</span>;

    <span class=K>function</span> CONV_SIGNED(ARG: UNSIGNED; SIZE: <span class=T>INTEGER</span>) <span class=K>return</span> SIGNED;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        CONV_SIGNED [UNSIGNED, <span class=T>INTEGER</span> <span class=K>return</span> SIGNED]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_conv_signed_us"</span>;

    <span class=K>function</span> CONV_SIGNED(ARG: SIGNED; SIZE: <span class=T>INTEGER</span>) <span class=K>return</span> SIGNED;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        CONV_SIGNED [SIGNED, <span class=T>INTEGER</span> <span class=K>return</span> SIGNED]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_conv_signed_ss"</span>;

    <span class=K>function</span> CONV_SIGNED(ARG: <span class=T>STD_ULOGIC</span>; SIZE: <span class=T>INTEGER</span>) <span class=K>return</span> SIGNED;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        CONV_SIGNED [<span class=T>STD_ULOGIC</span>, <span class=T>INTEGER</span> <span class=K>return</span> SIGNED]: <span class=K>function</span> <span class=K>is</span> <span class=S>"stdarith_conv_signed_xs"</span>;



    <span class=K>function</span> CONV_STD_LOGIC_VECTOR(ARG: <span class=T>INTEGER</span>; SIZE: <span class=T>INTEGER</span>)
						       <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        CONV_STD_LOGIC_VECTOR [<span class=T>INTEGER</span>, <span class=T>INTEGER</span> <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>]: <span class=K>function</span> <span class=K>is</span>
            <span class=S>"stdarith_conv_slv_iv"</span>;

    <span class=K>function</span> CONV_STD_LOGIC_VECTOR(ARG: UNSIGNED; SIZE: <span class=T>INTEGER</span>)
						       <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        CONV_STD_LOGIC_VECTOR [UNSIGNED, <span class=T>INTEGER</span> <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>]: <span class=K>function</span> <span class=K>is</span>
            <span class=S>"stdarith_conv_slv_uv"</span>;

    <span class=K>function</span> CONV_STD_LOGIC_VECTOR(ARG: SIGNED; SIZE: <span class=T>INTEGER</span>)
						       <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        CONV_STD_LOGIC_VECTOR [SIGNED, <span class=T>INTEGER</span> <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>]: <span class=K>function</span> <span class=K>is</span>
            <span class=S>"stdarith_conv_slv_sv"</span>;

    <span class=K>function</span> CONV_STD_LOGIC_VECTOR(ARG: <span class=T>STD_ULOGIC</span>; SIZE: <span class=T>INTEGER</span>)
						       <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        CONV_STD_LOGIC_VECTOR [<span class=T>STD_ULOGIC</span>, <span class=T>INTEGER</span> <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>]: <span class=K>function</span> <span class=K>is</span>
            <span class=S>"stdarith_conv_slv_xv"</span>;

    <span class=C>-- zero extend STD_LOGIC_VECTOR (ARG) to SIZE, </span>
    <span class=C>-- SIZE &lt; 0 is same as SIZE = 0</span>
    <span class=C>-- returns STD_LOGIC_VECTOR(SIZE-1 downto 0)</span>
    <span class=K>function</span> EXT(ARG: <span class=T>STD_LOGIC_VECTOR</span>; SIZE: <span class=T>INTEGER</span>) <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        EXT [<span class=T>STD_LOGIC_VECTOR</span>, <span class=T>INTEGER</span> <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>]: <span class=K>function</span> <span class=K>is</span>
            <span class=S>"stdarith_zeroextend_vv"</span>;


    <span class=C>-- sign extend STD_LOGIC_VECTOR (ARG) to SIZE, </span>
    <span class=C>-- SIZE &lt; 0 is same as SIZE = 0</span>
    <span class=C>-- return STD_LOGIC_VECTOR(SIZE-1 downto 0)</span>
    <span class=K>function</span> SXT(ARG: <span class=T>STD_LOGIC_VECTOR</span>; SIZE: <span class=T>INTEGER</span>) <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>;
    <span class=K>attribute</span> builtin_subprogram <span class=K>of</span>
        SXT [<span class=T>STD_LOGIC_VECTOR</span>, <span class=T>INTEGER</span> <span class=K>return</span> <span class=T>STD_LOGIC_VECTOR</span>]: <span class=K>function</span> <span class=K>is</span>
            <span class=S>"stdarith_signextend_vv"</span>;


<span class=K>end</span> Std_logic_arith;
</pre>
<SCRIPT SRC="../scripts/is.js"></SCRIPT><SCRIPT SRC="../scripts/imageFrame.js"></SCRIPT>
</body>
